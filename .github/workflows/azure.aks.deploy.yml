name: Deploy architecture on AKS

on:
  workflow_call:
    secrets:
      AZURE_CLIENT_ID:
        required: true
      AZURE_TENANT_ID:
        required: true
      AZURE_SUBSCRIPTION_ID:
        required: true
    inputs:
      front_tag:
        type: string
        required: true
      resource_group_name:
        type: string
        required: true
      cluster_name:
        type: string
        required: true
    outputs:
      ip_address:
        value: ${{jobs.deploy_on_aks.outputs.ip_address}}
permissions:
  id-token: write
  contents: read
jobs:
  deploy_on_aks:
    runs-on: ubuntu-latest
    environment: prod
    outputs:
      ip_address: ${{steps.ipAddress.outputs.IPADDRESS}}
    steps:
      - uses: actions/checkout@v4
        name: Checkout
      - name: Checkout infra repo
        uses: actions/checkout@v4
        with:
          repository: Breizhsport-cesi-pau/breizhsport-infra
          path: other-repo
          ref: env/test
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Azure login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Setup Helm
        uses: azure/setup-helm@v4.2.0
      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
      - name: Setup kubelogin
        uses: azure/use-kubelogin@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          kubelogin-version: latest
      - name: Set AKS context
        id: set-context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{inputs.resource_group_name}}
          cluster-name: ${{inputs.cluster_name}}
          admin: "false"
          use-kubelogin: "true"
      - name: Install ingress nginx
        run: |
          helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
          helm repo update
          helm install nginx-ingress ingress-nginx/ingress-nginx --namespace nginx --create-namespace
      - name: Sleep for 30 seconds
        run: |
          echo waiting for the ip address to pick up
          sleep 30s
      - name: Deploy front app
        run: |
          kubectl create namespace prod
          kubectl apply -R -f ./other-repo/architecture
          kubectl set image deployment/front-end front-end=keke65/breizhsport-front:${{inputs.front_tag}} -n prod
        shell: bash
      - name: Get public IP Adress
        id: ipAddress
        run: |
          IP=$(kubectl get svc -n nginx nginx-ingress-ingress-nginx-controller -o json | jq -r '.status.loadBalancer.ingress[0].ip')
          echo "the ip address is $IP"
          echo "IPADDRESS=$IP" >> $GITHUB_OUTPUT
