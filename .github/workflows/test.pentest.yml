name: Pentest and performance tests

on:
  workflow_call:
    secrets:
      AZURE_CLIENT_ID:
        required: true
      AZURE_TENANT_ID:
        required: true
      AZURE_SUBSCRIPTION_ID:
        required: true
    inputs:
      tag:
        type: string
        required: true
permissions:
  id-token: write
  contents: read
jobs:
  create_resource_group:
    uses: ./.github/workflows/azure.resource-group.create.yml
    secrets:
      AZURE_CLIENT_ID: ${{secrets.AZURE_CLIENT_ID}}
      AZURE_TENANT_ID: ${{secrets.AZURE_TENANT_ID}}
      AZURE_SUBSCRIPTION_ID: ${{secrets.AZURE_SUBSCRIPTION_ID}}
    with:
      resource_group_name: pentest-${{github.sha}}
  create_aks:
    needs: [create_resource_group]
    uses: ./.github/workflows/azure.aks.create.yml
    secrets:
      AZURE_CLIENT_ID: ${{secrets.AZURE_CLIENT_ID}}
      AZURE_TENANT_ID: ${{secrets.AZURE_TENANT_ID}}
      AZURE_SUBSCRIPTION_ID: ${{secrets.AZURE_SUBSCRIPTION_ID}}
    with:
      resource_group_name: pentest-${{github.sha}}
      aks_resource_group_name: pentest-${{github.sha}}-aks
      aks_name: pentest-aks
  deploy_on_aks:
    needs: [create_aks]
    uses: ./.github/workflows/azure.aks.deploy.yml
    secrets:
      AZURE_CLIENT_ID: ${{secrets.AZURE_CLIENT_ID}}
      AZURE_TENANT_ID: ${{secrets.AZURE_TENANT_ID}}
      AZURE_SUBSCRIPTION_ID: ${{secrets.AZURE_SUBSCRIPTION_ID}}
    with:
      front_tag: ${{inputs.tag}}
      resource_group_name: pentest-${{github.sha}}
      cluster_name: pentest-aks
  pentest:
    runs-on: ubuntu-latest
    needs: [deploy_on_aks]
    steps:
      - name: ZAP Scan
        uses: zaproxy/action-baseline@v0.14.0
        with:
          target: "http://${{needs.deploy_on_aks.outputs.ip_address}}"
          allow_issue_writing: false
          fail_action: false
  perf_test:
    needs: [deploy_on_aks]
    uses: ./.github/workflows/test.performance.yml
    with:
      url: "http://${{needs.deploy_on_aks.outputs.ip_address}}"
  remove_resource_group:
    needs: [pentest, perf_test]
    if: always()
    uses: ./.github/workflows/azure.resource-group.delete.yml
    secrets:
      AZURE_CLIENT_ID: ${{secrets.AZURE_CLIENT_ID}}
      AZURE_TENANT_ID: ${{secrets.AZURE_TENANT_ID}}
      AZURE_SUBSCRIPTION_ID: ${{secrets.AZURE_SUBSCRIPTION_ID}}
    with:
      resource_group_name: pentest-${{github.sha}}
  remove_aks_resource_group:
    needs: [pentest, perf_test]
    if: always()
    uses: ./.github/workflows/azure.resource-group.delete.yml
    secrets:
      AZURE_CLIENT_ID: ${{secrets.AZURE_CLIENT_ID}}
      AZURE_TENANT_ID: ${{secrets.AZURE_TENANT_ID}}
      AZURE_SUBSCRIPTION_ID: ${{secrets.AZURE_SUBSCRIPTION_ID}}
    with:
      resource_group_name: pentest-${{github.sha}}-aks
